import{_ as o,M as i,p as c,q as l,Q as t,t as n,N as a,V as e,a1 as p}from"./framework-49860b1b.js";const r={},u=p('<h1 id="移动适配" tabindex="-1"><a class="header-anchor" href="#移动适配" aria-hidden="true">#</a> 移动适配</h1><h2 id="基础概念" tabindex="-1"><a class="header-anchor" href="#基础概念" aria-hidden="true">#</a> 基础概念</h2><h3 id="像素" tabindex="-1"><a class="header-anchor" href="#像素" aria-hidden="true">#</a> 像素</h3><h4 id="设备像素" tabindex="-1"><a class="header-anchor" href="#设备像素" aria-hidden="true">#</a> 设备像素</h4><p>device pixels，简称 dp，物理像素，出厂就固定不变</p><h4 id="设备独立像素" tabindex="-1"><a class="header-anchor" href="#设备独立像素" aria-hidden="true">#</a> 设备独立像素</h4><p>在不缩放的情况下，css 中的 1px 就代表着 1 个独立像素<br> 早期移动设备，没有独立像素，css 中的 1px 就代表着 1 个物理像素，后面设备出现了独立像素，，但是 1 个独立像素不一定对应 1 个物理像素，需要根据设备像素比转换</p><h4 id="设备像素比" tabindex="-1"><a class="header-anchor" href="#设备像素比" aria-hidden="true">#</a> 设备像素比</h4><p>device pixel ratio，简称 dpr，的设备像素 / 设备独立像素 = 设备像素比</p><ul><li>当 dpr = 1 时，使用 1（1 * 1) 个设备像素显示 1 个 css 像素</li><li>当 dpr = 2 时，使用 4（2 * 2) 个设备像素显示 1 个 css 像素</li><li>当 dpr = 3 时，使用 9（3 * 3) 个设备像素显示 1 个 css 像素</li></ul><h4 id="css-像素" tabindex="-1"><a class="header-anchor" href="#css-像素" aria-hidden="true">#</a> css 像素</h4>',11),d=t("br",null,null,-1),k=p(`<h3 id="视口" tabindex="-1"><a class="header-anchor" href="#视口" aria-hidden="true">#</a> 视口</h3><h4 id="布局视口" tabindex="-1"><a class="header-anchor" href="#布局视口" aria-hidden="true">#</a> 布局视口</h4><p>layout viewport，在 pc 端，等于浏览器窗口的宽度，可通过 <code>document.documentElement.clientWidth || document.body.clientWidth</code> 来获取</p><h4 id="视觉视口" tabindex="-1"><a class="header-anchor" href="#视觉视口" aria-hidden="true">#</a> 视觉视口</h4><p>visual viewport，用户正在看到的网页区域，可通过 <code>window.innerWidth</code> 来获取</p><h4 id="理想视口" tabindex="-1"><a class="header-anchor" href="#理想视口" aria-hidden="true">#</a> 理想视口</h4><p>ideal viewport，布局视口的一个理想尺寸，只有当布局视口的尺寸等于设备屏幕的尺寸时，才是理想视口，可通过 <code>window.screen.width</code> 来获取</p><h4 id="视口总结" tabindex="-1"><a class="header-anchor" href="#视口总结" aria-hidden="true">#</a> 视口总结</h4><ul><li>在桌面浏览器上，浏览器窗口与视口的宽度一致，而视口（CSS 标准文档中称为“初始包含块”）是 CSS 百分比宽度推算的根源，因此，浏览器窗口是约束 CSS 布局的视口</li><li>在手机上，有两个视口，布局视口会限制 CSS 布局；视觉视口决定用户看到的网站内容</li><li>移动端浏览器还有个理想视口，它是对特定设备上的特定浏览器的布局视口的一个理想尺寸</li><li>可以把布局视口尺寸定义为理想视口。这也是响应式设计的基础</li><li><code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot;&gt;</code></li></ul><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>width</td><td>设置 layout viewport 的宽度，一个正整数，或字符串 “device-width”</td></tr><tr><td>height</td><td>设置 layout viewport 的高度，一般很少使用</td></tr><tr><td>initial-scale</td><td>设置页面的初始缩放值，为一个数字，可以带小数，相对于理想视口进行缩放，即 width=device-width 与 initial-scale=1 是相同的效果，但都有瑕疵，因此两个都写上</td></tr><tr><td>minimum-scale</td><td>允许用户的最小缩放值，为一个数字，可以带小数</td></tr><tr><td>maximum-scale</td><td>允许用户的最大缩放值，为一个数字，可以带小数</td></tr><tr><td>user-scalable</td><td>是否允许用户进行缩放，值为“no”或“yes”</td></tr></tbody></table><h2 id="适配方案" tabindex="-1"><a class="header-anchor" href="#适配方案" aria-hidden="true">#</a> 适配方案</h2><h3 id="方案-1-固定高度-宽度自适应" tabindex="-1"><a class="header-anchor" href="#方案-1-固定高度-宽度自适应" aria-hidden="true">#</a> 方案 1：固定高度，宽度自适应</h3><p>优点：使用较多，相对简单<br> 缺点：还原度较低<br> 使用方法：单纯设置 meta 属性，元素垂直方向使用固定的值，水平方向采用弹性布局</p><h3 id="方案-2-固定布局视口宽度-使用-viewport-进行缩放" tabindex="-1"><a class="header-anchor" href="#方案-2-固定布局视口宽度-使用-viewport-进行缩放" aria-hidden="true">#</a> 方案 2：固定布局视口宽度，使用 viewport 进行缩放</h3><p>优点：<br> 缺点：<br> 使用方法：<br> 方法 1：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Android (\\d+\\.\\d+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> version <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>RegExp<span class="token punctuation">.</span>$1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>version <span class="token operator">&gt;</span> <span class="token number">2.3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> phoneScale <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>screen<span class="token punctuation">.</span>width<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">640</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">MZ-M571C</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>
                <span class="token string">&#39;&lt;meta name=&quot;viewport&quot; content=&quot;width=640, minimum-scale=0.5, maximum-scale=0.5&quot;&gt;&#39;</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>
            <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">M571C</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
            <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">LizhiFM</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>
                <span class="token string">&#39;&lt;meta name=&quot;viewport&quot; content=&quot;width=640, minimum-scale=0.5, maximum-scale=0.5&quot;&gt;&#39;</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>
                <span class="token string">&#39;&lt;meta name=&quot;viewport&quot; content=&quot;width=640, minimum-scale=&#39;</span> <span class="token operator">+</span>
                    phoneScale <span class="token operator">+</span>
                    <span class="token string">&#39;, maximum-scale=&#39;</span> <span class="token operator">+</span>
                    phoneScale <span class="token operator">+</span>
                    <span class="token string">&#39;, target-densitydpi=device-dpi&quot;&gt;&#39;</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>
            <span class="token string">&#39;&lt;meta name=&quot;viewport&quot; content=&quot;width=640, target-densitydpi=device-dpi&quot;&gt;&#39;</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>
        <span class="token string">&#39;&lt;meta name=&quot;viewport&quot; content=&quot;width=640, user-scalable=no, target-densitydpi=device-dpi&quot;&gt;&#39;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方法 2：未细看该代码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> win <span class="token operator">=</span> window<span class="token punctuation">,</span>
    width <span class="token operator">=</span> <span class="token number">640</span><span class="token punctuation">,</span>
    iw <span class="token operator">=</span> win<span class="token punctuation">.</span>innerWidth <span class="token operator">||</span> width<span class="token punctuation">,</span>
    ow <span class="token operator">=</span> win<span class="token punctuation">.</span>outerHeight <span class="token operator">||</span> iw<span class="token punctuation">,</span>
    sw <span class="token operator">=</span> win<span class="token punctuation">.</span>screen<span class="token punctuation">.</span>width <span class="token operator">||</span> iw<span class="token punctuation">,</span>
    saw <span class="token operator">=</span> win<span class="token punctuation">.</span>screen<span class="token punctuation">.</span>availWidth <span class="token operator">||</span> iw<span class="token punctuation">,</span>
    ih <span class="token operator">=</span> win<span class="token punctuation">.</span>innerHeight <span class="token operator">||</span> width<span class="token punctuation">,</span>
    oh <span class="token operator">=</span> win<span class="token punctuation">.</span>outerHeight <span class="token operator">||</span> ih<span class="token punctuation">,</span>
    ish <span class="token operator">=</span> win<span class="token punctuation">.</span>screen<span class="token punctuation">.</span>height <span class="token operator">||</span> ih<span class="token punctuation">,</span>
    sah <span class="token operator">=</span> win<span class="token punctuation">.</span>screen<span class="token punctuation">.</span>availHeight <span class="token operator">||</span> ih<span class="token punctuation">,</span>
    w <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>iw<span class="token punctuation">,</span> ow<span class="token punctuation">,</span> sw<span class="token punctuation">,</span> saw<span class="token punctuation">,</span> ih<span class="token punctuation">,</span> oh<span class="token punctuation">,</span> ish<span class="token punctuation">,</span> sah<span class="token punctuation">)</span><span class="token punctuation">,</span>
    ratio <span class="token operator">=</span> w <span class="token operator">/</span> width<span class="token punctuation">,</span>
    dpr <span class="token operator">=</span> win<span class="token punctuation">.</span>devicePixelRatio<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ratio <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>ratio<span class="token punctuation">,</span> dpr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">&gt;</span> ratio<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> ctt <span class="token operator">=</span> <span class="token string">&#39;,initial-scale=&#39;</span> <span class="token operator">+</span> ratio <span class="token operator">+</span> <span class="token string">&#39;,maximum-scale=&#39;</span> <span class="token operator">+</span> ratio<span class="token punctuation">,</span>
        metas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;meta&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ctt <span class="token operator">+=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> meta<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> metas<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">(</span>meta <span class="token operator">=</span> metas<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;viewport&#39;</span> <span class="token operator">==</span> meta<span class="token punctuation">.</span>name <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>meta<span class="token punctuation">.</span>content <span class="token operator">+=</span> ctt<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>固定布局视口，宽度设置固定的值，总宽度为 640px，根据屏幕宽度动态生成 viewport <code>&lt;meta name=&quot;viewport&quot; content=&quot;width=640, minimum-scale=0.5625, maximum-scale=0.5625, target-densitydpi=device-dpi&quot;&gt;</code></p><h3 id="方案-3-固定布局视口宽度-以-rem-作为宽度单位-根据不同屏幕动态写入-font-size" tabindex="-1"><a class="header-anchor" href="#方案-3-固定布局视口宽度-以-rem-作为宽度单位-根据不同屏幕动态写入-font-size" aria-hidden="true">#</a> 方案 3：固定布局视口宽度，以 rem 作为宽度单位，根据不同屏幕动态写入 font-size</h3><p>优点：还原度较高<br> 缺点：<br> 使用方法：以 640px 设计稿和 750px 的视觉稿</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> width <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth<span class="token punctuation">;</span> <span class="token comment">// 屏幕的布局视口宽度</span>
<span class="token keyword">var</span> rem <span class="token operator">=</span> width <span class="token operator">/</span> <span class="token number">7.5</span><span class="token punctuation">;</span> <span class="token comment">// 750px设计稿将布局视口分为7.5份</span>
<span class="token keyword">var</span> rem <span class="token operator">=</span> width <span class="token operator">/</span> <span class="token number">6.4</span><span class="token punctuation">;</span> <span class="token comment">// 640px设计稿将布局视口分为6.4份</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样不管是 750px 设计稿还是 640px 设计稿，1rem 等于设计稿上的 100px。故 px 转换 rem 时：1 px = rem * 0.01<br> 在 750px 设计稿上，75px 对应 0.75rem，距离占设计稿的 10%</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>在 iphone6 上
width = document.documentElement.clientWidth = 375px;
1rem = 375px / 7.5 = 50px;
0.75rem = 37.5px;（37.5 / 375 = 10%，占屏幕 10%）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>在 iphone5 上
width = document.documentElement.clientWidth = 320px;
1rem = 320px / 7.5 = 42.667px;
0.75rem = 32px;（32 / 320 = 10%，占屏幕 10%）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="方案-4-以-rem-作为宽度单位-设置默认-dpr-得到默认的-rem-值-动态写入-viewport-和-font-size-进行缩放" tabindex="-1"><a class="header-anchor" href="#方案-4-以-rem-作为宽度单位-设置默认-dpr-得到默认的-rem-值-动态写入-viewport-和-font-size-进行缩放" aria-hidden="true">#</a> 方案 4：以 rem 作为宽度单位，设置默认 dpr，得到默认的 rem 值，动态写入 viewport 和 font-size 进行缩放</h3><p>该方案有默认的 rem 值，方案 5 没有</p><p>使用方法：根据设置的 dpr 设置 font-size</p><ul><li>document.documentElement.style.fontSize = 50 * dpr;</li><li>dpr 为设置的设备像素比（注意不是设备自身的设备像素比，而是人为设置的 dpr）</li><li>此时，若 dpr = 1，则 1rem = 50px，dpr = 2，则 1rem = 100px</li><li>当设计师以 iphone6 为标准，出 750px 的设计稿时，此时 dpr = 2，故 1rem = 100px，将图上的尺寸转为 rem 只需除于 100 即可</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> scale <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> dpr <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> isAndroid <span class="token operator">=</span> window<span class="token punctuation">.</span>navigator<span class="token punctuation">.</span>appVersion<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">android</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> isIPhone <span class="token operator">=</span> window<span class="token punctuation">.</span>navigator<span class="token punctuation">.</span>appVersion<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">iphone</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> devicePixelRatio <span class="token operator">=</span> window<span class="token punctuation">.</span>devicePixelRatio<span class="token punctuation">;</span>
<span class="token comment">// 此处只简单对ios做了伸缩处理，安卓没有做伸缩处理，统一 dpr = 1</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>isIPhone<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    scale <span class="token operator">/=</span> devicePixelRatio<span class="token punctuation">;</span>
    dpr <span class="token operator">*=</span> devicePixelRatio<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> viewport <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;viewport&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> content <span class="token operator">=</span>
    <span class="token string">&#39;initial-scale=&#39;</span> <span class="token operator">+</span>
    scale <span class="token operator">+</span>
    <span class="token string">&#39;,maximum-scale=&#39;</span> <span class="token operator">+</span>
    scale <span class="token operator">+</span>
    <span class="token string">&#39;,minimum-scale=&#39;</span> <span class="token operator">+</span>
    scale <span class="token operator">+</span>
    <span class="token string">&#39;, width=device-width, user-scalable=no&#39;</span><span class="token punctuation">;</span>
viewport<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> <span class="token number">50</span> <span class="token operator">*</span> dpr <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;data-dpr&#39;</span><span class="token punctuation">,</span> dpr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 留作 css hack 用</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>假设肉眼看到的宽度（视觉宽度）：visualWidth，令 dpr=1 时，其 1rem 对应的宽度为 50</p><ul><li>dpr = 1 时， 1rem = 50px, initial-scale=1, 缩放为 1，visualWidth = 50 * 1 = 50</li><li>dpr = 2 时， 1rem = 100px, initial-scale=0.5, 缩放为 0.5，visualWidth = 100 * 0.5 = 50</li><li>dpr = 3 时， 1rem = 150px, initial-scale=0.3333, 缩放为 0.3333，visualWidth = 150 * 0.3333 = 50</li></ul><h3 id="方案-5-以-rem-作为宽度单位-将屏幕分为固定单位-动态写入-font-size-和-viewport" tabindex="-1"><a class="header-anchor" href="#方案-5-以-rem-作为宽度单位-将屏幕分为固定单位-动态写入-font-size-和-viewport" aria-hidden="true">#</a> 方案 5：以 rem 作为宽度单位，将屏幕分为固定单位，动态写入 font-size 和 viewport</h3><p>rem 无默认值，方案 4 的有</p><p>优点：还原度较高</p><p>使用方法：将屏幕分为固定的块数 10</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> width <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth<span class="token punctuation">;</span>
<span class="token keyword">var</span> rem <span class="token operator">=</span> width <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span>

<span class="token comment">// 此时，在任何屏幕下，总长度都为 10rem，1rem 对应的值不固定，与屏幕的布局视口宽度有关</span>
<span class="token comment">// 动态生成 viewport，对于动态生成 viewport，他们原理差不多，根据 dpr 来设置缩放</span>

<span class="token keyword">var</span> devicePixelRatio <span class="token operator">=</span> width<span class="token punctuation">.</span>devicePixelRatio<span class="token punctuation">;</span>
<span class="token keyword">var</span> isIPhone <span class="token operator">=</span> document<span class="token punctuation">.</span>navigator<span class="token punctuation">.</span>appVersion<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">iphone</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> dpr<span class="token punctuation">,</span> scale<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>isIPhone<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>devicePixelRatio <span class="token operator">&gt;=</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dpr <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>devicePixelRatio <span class="token operator">&gt;=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dpr <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        dpr <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    dpr <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
scale <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> dpr<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="方案小结" tabindex="-1"><a class="header-anchor" href="#方案小结" aria-hidden="true">#</a> 方案小结</h3><ul><li>方案 3 与 方案 5，使用较方便，也容易理解，两者也比较相似</li><li>方案 2 做了百分比适配，部分 1px 适配，没有字体适配</li><li>方案 3 做了百分比适配，没有 1px 适配，有字体大小适配</li><li>方案 4 没有做百分百适配，布局要用百分百和 flex 布局，做了 1px 的适配，并且对于段落文字直接可以用 rem 做单位，不需要做适配</li><li>方案 5 做了百分比适配，有 1px 适配，有字体大小适配</li></ul><h2 id="适配总结" tabindex="-1"><a class="header-anchor" href="#适配总结" aria-hidden="true">#</a> 适配总结</h2><p>移动端适配最主要的是使在不同屏幕下不用缩放页面就能正常显示整个页面，其次才考虑以下需求：</p><ul><li>解决高清屏下 1px 的问题，其实有很多 hack 方法，这里只讲了缩放视口。先将布局视口设置为高清屏的物理像素。这样 css 中 1px 就是 1 个物理像素，这样看到的线条才是真正的 1px。但是此时视口宽度大于设备的宽度，就会出现滚动条。故对视口进行缩放，使视口宽度缩放到设备宽度。</li><li>在大屏手机中一行看到的段落文字应该比小屏手机的多，所以段落文本一般使用 px 作为单位，对于不同 dpr 设置不同的大小（方案 4 的 1rem 不管何时，视觉上的宽度都是一样的，所以可以用 rem 作为字体单位）</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.selector</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">[data-dpr=&#39;2&#39;] .selector</span> <span class="token punctuation">{</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 28px<span class="token punctuation">;</span> // 14 * 2
<span class="token punctuation">}</span>
<span class="token selector">[data-dpr=&#39;3&#39;] .selector</span> <span class="token punctuation">{</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 42px<span class="token punctuation">;</span> // 14 * 3
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,43);function v(m,h){const s=i("font");return c(),l("div",null,[u,t("p",null,[n("css 和 js 中使用的 px"),d,n(" 当缩放页面的时候，元素的 css 像素"),a(s,{color:"#ff0000"},{default:e(()=>[n("数量")]),_:1}),n("不会改变，改变的只是 css 像素的"),a(s,{color:"#ff0000"},{default:e(()=>[n("大小")]),_:1}),n(" 如，width:100px 的元素缩放 200% 之后，宽度仍然为 100 个像素，但是每个像素的大小变成了原来的 2 倍，此时对应的设备独立像素就为 200 个了")]),k])}const g=o(r,[["render",v],["__file","3.html.vue"]]);export{g as default};
