import{_ as d,p as a,q as t,R as e,a1 as b}from"./framework-49860b1b.js";const c={},o=b('<h1 id="display" tabindex="-1" data-v-412d4bb6><a class="header-anchor" href="#display" aria-hidden="true" data-v-412d4bb6>#</a> display</h1><ul data-v-412d4bb6><li data-v-412d4bb6><code data-v-412d4bb6>display: flow-root</code>：生成一个块元素框，该框建立一个新的 BFC，因此该块会被浮动元素撑开高度</li><li data-v-412d4bb6><code data-v-412d4bb6>display: list-item</code>：该属性会将子项变成类似 <code data-v-412d4bb6>li</code> 的元素，由<code data-v-412d4bb6>::marker</code> 伪元素设置标识符样式</li><li data-v-412d4bb6><code data-v-412d4bb6>display: contents</code>：该属性将不显示元素自身的盒模型，改由子元素控制</li><li data-v-412d4bb6><code data-v-412d4bb6>display: ruby</code>：将元素编程内联元素，并且根据 <code data-v-412d4bb6>ruby</code> 格式化模型布置其内容，它的行为类似于相应的 <code data-v-412d4bb6>&lt;ruby&gt;</code> 标签</li></ul><h2 id="示例" tabindex="-1" data-v-412d4bb6><a class="header-anchor" href="#示例" aria-hidden="true" data-v-412d4bb6>#</a> 示例</h2><p data-v-412d4bb6><code data-v-412d4bb6>display: contents</code> 效果：<div class="div" data-v-412d4bb6><span data-v-412d4bb6>span 标签为子元素，审查代码可发现父元素自身的盒模型不见了</span></div></p><p data-v-412d4bb6><code data-v-412d4bb6>&lt;ruby&gt;</code> 标签效果：<ruby data-v-412d4bb6>汉字<rt data-v-412d4bb6>han zi</rt></ruby></p>',5);function i(l,s){return a(),t("div",null,[e(" @format "),o])}const v=d(c,[["render",i],["__scopeId","data-v-412d4bb6"],["__file","4.html.vue"]]);export{v as default};
