import{_ as n,p as s,q as a,R as t,a1 as p}from"./framework-49860b1b.js";const e="/assets/1-6f56ebcd.png",c={},o=p(`<h1 id="注意点" tabindex="-1"><a class="header-anchor" href="#注意点" aria-hidden="true">#</a> 注意点</h1><ul><li>左上角为坐标原点 <code>(0，0)</code></li><li>所有图形渲染出来之后默认在原点，需要手动调整位置，可选择更改 <code>x</code>、<code>y</code>、<code>transform</code> 等属性（此操作开始有点晕，熟悉之后就好了）</li></ul><h1 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h1><h2 id="csvparse" tabindex="-1"><a class="header-anchor" href="#csvparse" aria-hidden="true">#</a> csvParse()</h2><p>解析 <code>csv</code> 文件，返回格式化后的对象。示例如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> data <span class="token operator">=</span> d3<span class="token punctuation">.</span><span class="token function">csvParse</span><span class="token punctuation">(</span>csv<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">date</span><span class="token operator">:</span> item<span class="token punctuation">.</span>date<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="utcparse" tabindex="-1"><a class="header-anchor" href="#utcparse" aria-hidden="true">#</a> utcParse()</h2><p>返回一个时间格式化函数。示例如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> parseDate <span class="token operator">=</span> d3<span class="token punctuation">.</span><span class="token function">utcParse</span><span class="token punctuation">(</span><span class="token string">&#39;%Y-%m-%d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="extent" tabindex="-1"><a class="header-anchor" href="#extent" aria-hidden="true">#</a> extent()</h2><p>获取数据集中，指定字段的范围区间，返回一个数组，分别为最小值和最大值。示例如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> dateRange <span class="token operator">=</span> d3<span class="token punctuation">.</span><span class="token function">extent</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> d<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>d3<span class="token punctuation">.</span><span class="token function">extent</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> d<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="append" tabindex="-1"><a class="header-anchor" href="#append" aria-hidden="true">#</a> append()</h2><p>追加元素，和浏览器的 <code>append</code> 方法类似。示例如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 直接追加元素</span>
d3<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">&#39;.div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;span&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 追加独立创建的元素</span>
<span class="token keyword">const</span> span <span class="token operator">=</span> d3<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">&#39;span&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
d3<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">&#39;.div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> span<span class="token punctuation">.</span><span class="token function">node</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="attr" tabindex="-1"><a class="header-anchor" href="#attr" aria-hidden="true">#</a> attr()</h2><p>设置属性，接受两个参数</p><ul><li>第一个参数：要设置的属性</li><li>第二个参数：属性值。可接受一个函数，该函数的返回值将作为值</li></ul><h2 id="enter" tabindex="-1"><a class="header-anchor" href="#enter" aria-hidden="true">#</a> enter()</h2><p>返回有数据没有 DOM 的集合，通常与 <code>append()</code> 一起出现</p><h2 id="exit" tabindex="-1"><a class="header-anchor" href="#exit" aria-hidden="true">#</a> exit()</h2><p>返回有 DOM 没有数据的集合，通常与 <code>remove()</code> 一起出现</p><h2 id="join" tabindex="-1"><a class="header-anchor" href="#join" aria-hidden="true">#</a> join()</h2><p>根据需要进行追加、删除、重新排列元素，以匹配先前通过选择绑定的数据，返回合并后的 <code>enter</code> 和 <code>update</code> 集合</p><p>也就是说 <code>join</code> 是一个简化操作：将 <code>data()</code> 返回的 <code>update</code> 和 <code>enter</code> 进行 <code>merge</code>，得到最终要渲染的数据</p><p><code>join()</code> 的参数为</p><ul><li><code>enter</code>：字符串或回调函数</li><li><code>update</code>：回调函数</li><li><code>exit</code>：回调函数 分别用于处理数据进入、更新、删除三种状态时的操作，配合 <code>transition()</code> 即可实现动画效果。示例如下</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> t <span class="token operator">=</span> d3<span class="token punctuation">.</span><span class="token function">transition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">duration</span><span class="token punctuation">(</span><span class="token number">750</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
d3<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token string">&#39;text&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> d<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">enter</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
      enter
        <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;text&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;fill&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;y&#39;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">transition</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;y&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token parameter">update</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
      update
        <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;fill&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#555&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">transition</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">d<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> i <span class="token operator">*</span> <span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token parameter">exit</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> exit<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;fill&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">transition</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;y&#39;</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="data-、element-、update-、enter-、exit-的关系" tabindex="-1"><a class="header-anchor" href="#data-、element-、update-、enter-、exit-的关系" aria-hidden="true">#</a> <code>data()</code>、<code>element()</code>、<code>update()</code>、<code>enter()</code>、<code>exit()</code> 的关系</h2><p><img src="`+e+`" alt=""></p><h2 id="stack" tabindex="-1"><a class="header-anchor" href="#stack" aria-hidden="true">#</a> stack()</h2><p>堆叠生成器。将原始数据转换为便于生成这类型图表的数据，一般将堆叠生成器与面积生成器配合使用，也可生成条形图</p><h3 id="相关排序函数" tabindex="-1"><a class="header-anchor" href="#相关排序函数" aria-hidden="true">#</a> 相关排序函数</h3><ul><li><code>d3.stackOrderAppearance</code>：在所有数据点中，具有最大值的系列在底部</li><li><code>d3.stackOrderAscending</code>：系列所有值之和最小的在底部</li><li><code>d3.stackOrderDescending</code>：系列所有值之和最大的在底部</li><li><code>d3.stackOrderInsideOut</code>：在所有数据点中，具有最大值的系列在中间（一般用于河流图中）</li><li><code>d3.stackOrderNone</code>：默认值，堆叠次序按照系列名称数组 keys 的顺序</li><li><code>d3.stackOrderReverse</code>：堆叠次序和系列名称数组 keys 次序相反</li></ul><h3 id="相关基线函数" tabindex="-1"><a class="header-anchor" href="#相关基线函数" aria-hidden="true">#</a> 相关基线函数</h3><p><code>stack.offset(offsetFunc)</code>：设置系列堆叠基线函数。默认使用 <code>stack.offset(d3.stackOffsetNone)</code> 即以零为基线</p><ul><li><code>d3.stackOffsetExpand</code>：对数据进行标准化，基线是零，上边界线是 1</li><li><code>d3.stackOffsetDiverging</code>：允许正值和负值分别进行堆叠，正值会在零之上进行堆叠，负值会在零之下堆叠</li><li><code>d3.stackOffsetNone</code>：默认值，以零为基线</li><li><code>d3.stackOffsetSilhouette</code>：将基线向下移动，使河流图的中心始终为零</li><li><code>d3.stackOffsetWiggle</code>：移动基线，以最大程度地减少各系列在横轴方向上的「摆动」，一般用在河流图中，与 <code>d3.stackOrderInsideOut</code> 排序函数配合使用。</li></ul><h1 id="比例尺" tabindex="-1"><a class="header-anchor" href="#比例尺" aria-hidden="true">#</a> 比例尺</h1><p>d3 的比例尺有很多，常用的有 <code>scaleLinear()</code> 和 <code>scaleBand()</code> 两种，因为直方图的 <code>x</code> 轴和 <code>y</code> 轴就要用到</p><p>其返回值是一个函数，使用示例如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> x <span class="token operator">=</span> d3
  <span class="token punctuation">.</span><span class="token function">scaleLinear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">domain</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> d3<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>fruits<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> d<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token punctuation">[</span>margin<span class="token punctuation">.</span>left<span class="token punctuation">,</span> width <span class="token operator">-</span> margin<span class="token punctuation">.</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">interpolate</span><span class="token punctuation">(</span>d3<span class="token punctuation">.</span>interpolateRound<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> y <span class="token operator">=</span> d3
  <span class="token punctuation">.</span><span class="token function">scaleBand</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">domain</span><span class="token punctuation">(</span>fruits<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> d<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token punctuation">[</span>margin<span class="token punctuation">.</span>top<span class="token punctuation">,</span> height <span class="token operator">-</span> margin<span class="token punctuation">.</span>bottom<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>width</code> 和 <code>margin</code> 是一个手动设置的变量，表示图表的总宽度和内边距</li><li><code>domain()</code> ：数据范围</li><li><code>range()</code>：显示范围</li><li><code>interpolate</code>：差值器，用于插补任意值，如数字、字符串、颜色、数组、对象等。大白话就是：d3 根据初始提供的数据，自动填充中间的值。示例如下<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> color <span class="token operator">=</span> d3<span class="token punctuation">.</span><span class="token function">interpolateRgb</span><span class="token punctuation">(</span><span class="token string">&#39;rgb(0, 0, 0)&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rgb(255, 255, 255)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// rgb(128, 128, 128)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h1 id="坐标轴" tabindex="-1"><a class="header-anchor" href="#坐标轴" aria-hidden="true">#</a> 坐标轴</h1><p>d3 提供了 4 个方向的轴</p><ul><li><code>d3.axisTop(scale)</code></li><li><code>d3.axisBottom(scale)</code></li><li><code>d3.axisLeft(scale)</code></li><li><code>d3.axisRight(scale)</code></li></ul><p>坐标轴需要配合比例尺一起使用。示例如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 定义一个比例尺（具体定义方法见前面）</span>
<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> y <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> xAxis <span class="token operator">=</span> d3<span class="token punctuation">.</span><span class="token function">axisBottom</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> yAxis <span class="token operator">=</span> d3<span class="token punctuation">.</span><span class="token function">axisLeft</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 在画布中特定位置放置坐标轴</span>
svg<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;g&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;transform&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;translate(0, 0)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>xAxis<span class="token punctuation">)</span><span class="token punctuation">;</span>
svg<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;g&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;transform&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;translate(0, 0)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>yAxis<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="图形" tabindex="-1"><a class="header-anchor" href="#图形" aria-hidden="true">#</a> 图形</h1><ul><li><code>d3.line()</code>：折线图</li><li><code>d3.area()</code>：面积图</li><li><code>d3.arc()</code>：环形图</li><li><code>d3.pie()</code>：饼图</li></ul><p>使用示例如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 折线图</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> d3
  <span class="token punctuation">.</span><span class="token function">line</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">x</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">y</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">y</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>close<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

svg
  <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;g&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token function">line</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;fill&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;purple&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;stroke&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;purple&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 面积图</span>
<span class="token keyword">const</span> area <span class="token operator">=</span> d3
  <span class="token punctuation">.</span><span class="token function">area</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">x</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">y0</span><span class="token punctuation">(</span><span class="token function">y</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 该数据可自定义，当其不为 y(0) 的时候，则会从指定的位置开始生成面积，而不是从 y 轴为 0 的地方</span>
  <span class="token punctuation">.</span><span class="token function">y1</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">y</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>close<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

svg
  <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;g&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token function">area</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;fill&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;purple&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;stroke&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;purple&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 环形图</span>
<span class="token keyword">const</span> arc <span class="token operator">=</span> d3
  <span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">innerRadius</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">outerRadius</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">startAngle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>startAngle<span class="token punctuation">,</span> endAngle<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> startAngle<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">endAngle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>startAngle<span class="token punctuation">,</span> endAngle<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> endAngle<span class="token punctuation">)</span><span class="token punctuation">;</span>

svg
  <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;g&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;transform&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;translate(30, 30)&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token function">arc</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 饼图，需要和环形图结合使用</span>
<span class="token comment">// 生成饼图数据</span>
<span class="token keyword">const</span> pieArcData <span class="token operator">=</span> d3<span class="token punctuation">.</span><span class="token function">pie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> d<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 生成环形图</span>
<span class="token keyword">const</span> arcPie <span class="token operator">=</span> d3
  <span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">innerRadius</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">outerRadius</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">padRadius</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">padAngle</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">cornerRadius</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 生成每一块饼</span>
<span class="token keyword">const</span> arcs <span class="token operator">=</span> svg
  <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;g&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;transform&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;translate(150, 120)&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token string">&#39;arc&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>pieArcData<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">enter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;g&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 填充饼</span>
arcs
  <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;fill&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">d<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> d3<span class="token punctuation">.</span>schemeSet3<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> arcPie<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="动画" tabindex="-1"><a class="header-anchor" href="#动画" aria-hidden="true">#</a> 动画</h1><p>d3 有动画形式有以下几种</p><ul><li>依赖于 D3 的过渡，创建一个初始图形，然后开始一个过渡来修改它 <code>stroke-dasharray</code> 值</li><li>依赖于可观察的数据流，每当引用 <code>t</code> 发生变化时重新创建图形，并依赖一个 <code>scrubber</code> 来计时。这种方法比前一种效率低，因为图形是从头开始创建的，但更容易编写。</li></ul><h2 id="符号生成器-symbol" tabindex="-1"><a class="header-anchor" href="#符号生成器-symbol" aria-hidden="true">#</a> 符号生成器 Symbol</h2><p>d3 内置了七种符号</p><ul><li><code>d3.symbolCircle</code>：圆形</li><li><code>d3.symbolCross</code>：十字形</li><li><code>d3.symbolDiamond</code>：菱形</li><li><code>d3.symbolSquare</code>：正方形</li><li><code>d3.symbolStart</code>：星形</li><li><code>d3.symbolTriangle</code>：向上的三角形</li><li><code>d3.symbolWye</code>：Y 形</li></ul><p>使用示例如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 直接使用</span>
d3<span class="token punctuation">.</span><span class="token function">symbol</span><span class="token punctuation">(</span>symbolCross<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 根据条件使用</span>
d3<span class="token punctuation">.</span><span class="token function">symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> symbolCross<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>几种方法解释</p><ul><li><code>symbol.type()</code>：设置符号类型</li><li><code>symbol.size()</code>：设置符号尺寸</li><li><code>symbol.context()</code>：设置父容器，如果设置了父容器，则会生成 <code>&lt;path&gt;</code> 元素，并添加到父容器中，否则，则生成可用于 <code>&lt;path&gt;</code> 元素的 <code>d</code> 属性值的字符串</li></ul><p>可自定义符号类型，具体查看 https://github.com/d3/d3-shape#custom-symbol-types</p><p>它是一个具有 <code>draw</code> 方法的对象，该方法接收两个参数 <code>context</code> 和 <code>size</code></p><ul><li><code>context</code>：一个可以调用 <code>canvas API</code> 中与 <code>path</code> 相关方法的对象</li><li><code>size</code>：设置符号的大小</li></ul><p>具体写法可参考 d3 源码中的内置符号来了解</p>`,67);function i(l,u){return s(),a("div",null,[t(" @format "),o])}const k=n(c,[["render",i],["__file","1.html.vue"]]);export{k as default};
