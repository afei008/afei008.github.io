import{_ as n,p as s,q as a,a1 as t}from"./framework-49860b1b.js";const e={},p=t(`<h1 id="定时器" tabindex="-1"><a class="header-anchor" href="#定时器" aria-hidden="true">#</a> 定时器</h1><h2 id="settimeout-机制" tabindex="-1"><a class="header-anchor" href="#settimeout-机制" aria-hidden="true">#</a> setTimeout 机制</h2><p>js 是单线程运行，setTimeout 只是负责准时把事件压入事件循环主任务队列末尾，在下一次事件循环开始时执行，并不是说时间到了就执行，还要等到线程空闲才能被执行，因此会产生误差</p><h2 id="校正" tabindex="-1"><a class="header-anchor" href="#校正" aria-hidden="true">#</a> 校正</h2><p>无法完全避免，可通过一定办法减少误差</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 记录上次时间</span>
<span class="token keyword">let</span> <span class="token constant">T0</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//  记录代码执行消耗时间</span>
    <span class="token keyword">let</span> <span class="token constant">T1</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//  获取下次执行时间间隔</span>
    <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token number">1000</span> <span class="token operator">-</span> <span class="token constant">T1</span> <span class="token operator">-</span> <span class="token constant">T0</span><span class="token punctuation">;</span>
    <span class="token comment">//  赋值给 T0</span>
    <span class="token constant">T0</span> <span class="token operator">=</span> <span class="token constant">T1</span><span class="token punctuation">;</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span>loop<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>loop<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),o=[p];function c(l,i){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","19.html.vue"]]);export{r as default};
