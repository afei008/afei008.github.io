import{_ as n,p as s,q as a,a1 as t}from"./framework-49860b1b.js";const e={},p=t(`<h1 id="实现-insertafter" tabindex="-1"><a class="header-anchor" href="#实现-insertafter" aria-hidden="true">#</a> 实现 insertAfter</h1><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">insertAfter</span><span class="token punctuation">(</span><span class="token parameter">newEl<span class="token punctuation">,</span> targetEl</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取目标节点的父节点</span>
    <span class="token keyword">let</span> parentEl <span class="token operator">=</span> targetEl<span class="token punctuation">.</span>parentNode<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>parentEl<span class="token punctuation">.</span>lastChild <span class="token operator">==</span> targetEl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 如果父节点的最后一个节点是目标节点，则直接插入最后</span>
        parentEl<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>newEl<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// 如果不是，则在目标节点的下一个兄弟节点前面插入</span>
        parentEl<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>newEl<span class="token punctuation">,</span> targetEl<span class="token punctuation">.</span>nextSibling<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> c <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> d <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;span&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
d<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">&#39;aaa&#39;</span><span class="token punctuation">;</span>
<span class="token function">insertAfter</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),c=[p];function o(l,i){return s(),a("div",null,c)}const r=n(e,[["render",o],["__file","insert-after.html.vue"]]);export{r as default};
