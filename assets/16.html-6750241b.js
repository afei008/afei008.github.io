import{_ as t,M as e,p,q as o,Q as n,t as a,N as c,V as i,a1 as l}from"./framework-49860b1b.js";const u={},r=l(`<h1 id="ajax" tabindex="-1"><a class="header-anchor" href="#ajax" aria-hidden="true">#</a> ajax</h1><h2 id="工作原理" tabindex="-1"><a class="header-anchor" href="#工作原理" aria-hidden="true">#</a> 工作原理</h2><p>相当于在用户和服务器之间加了—个中间层(AJAX 引擎),使用户操作与服务器响应异步化。</p><p>并不是所有的用户请求都提交给服务器,像—些数据验证和数据处理等都交给 Ajax 引擎自己来做, 只有确定需要从服务器读取新数据时再由 Ajax 引擎代为向服务器提交请求。</p><h2 id="ajax-是同步还是异步-怎么样实现同步" tabindex="-1"><a class="header-anchor" href="#ajax-是同步还是异步-怎么样实现同步" aria-hidden="true">#</a> ajax 是同步还是异步，怎么样实现同步</h2><p>异步技术</p><ul><li>打开 url 时，第三个参数，true 为异步，false 为同步</li><li>当为同步时，无需编写 onreadystatechange 函数，将操作写在 send() 方法后面即可</li></ul><h2 id="实现一个-ajax-兼容" tabindex="-1"><a class="header-anchor" href="#实现一个-ajax-兼容" aria-hidden="true">#</a> 实现一个 ajax，兼容</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> xmlhttp<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>XMLHttpRequest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ie7+，及现代浏览器</span>
    xmlhttp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// ie5 ie6</span>
    xmlhttp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ActiveXObject</span><span class="token punctuation">(</span><span class="token string">&#39;Microsoft.XMLHTTP&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
xmlhttp<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xmlhttp<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// readyState：</span>
    <span class="token comment">// 0：请求未初始化，还没有调用 open()</span>
    <span class="token comment">// 1：服务器已建立连接，open() 已调用，还没有调用 send()</span>
    <span class="token comment">// 2：请求已接收，send() 已调用，且头部和状态可以获得</span>
    <span class="token comment">// 3：请求处理中，responseText 属性已包含部分数据</span>
    <span class="token comment">// 4：请求已完成，且响应已就绪</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>xmlhttp<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xmlhttp<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> xmlhttp<span class="token punctuation">.</span>responseText<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    xmlhttp<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;url&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    xmlhttp<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;btn2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    xmlhttp<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;url&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    xmlhttp<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span>
        <span class="token string">&#39;Content-type&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;application/x-www-form-urlencoded&#39;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    xmlhttp<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;fname=Henry&amp;lname=Ford&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ajax-返回-204-算是成功吗" tabindex="-1"><a class="header-anchor" href="#ajax-返回-204-算是成功吗" aria-hidden="true">#</a> Ajax 返回 204 算是成功吗</h2><p>算，具体看 blog/http/status-code.txt</p><h2 id="假如访问-a-com-存进了一个-cookie-在另外一个页面用-ajax-向-a-的域名发请求会携带-cookie-吗" tabindex="-1"><a class="header-anchor" href="#假如访问-a-com-存进了一个-cookie-在另外一个页面用-ajax-向-a-的域名发请求会携带-cookie-吗" aria-hidden="true">#</a> 假如访问 A.com 存进了一个 cookie，在另外一个页面用 ajax 向 A 的域名发请求会携带 cookie 吗</h2>`,12),d=n("h2",{id:"表单提交和-ajax-的区别",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#表单提交和-ajax-的区别","aria-hidden":"true"},"#"),a(" 表单提交和 ajax 的区别")],-1),k=n("ul",null,[n("li",null,"刷新：ajax 无需刷新网页，表单提交要刷新"),n("li",null,"请求：ajax 后台创建请求，表单放弃本页面再次申请"),n("li",null,"实现：ajax 必须使用 js 实现，表单是浏览器功能，无需 js"),n("li",null,"数据：ajax 需要代码来处理数据，表单根据表单结构自动完成，无需代码干预")],-1);function m(v,h){const s=e("RouterLink");return p(),o("div",null,[r,n("p",null,[a("cookie 作用域、csrf 跨站请求伪造知识"),c(s,{to:"/js/basis/%E8%A7%A3%E7%AD%94/http/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AE%89%E5%85%A8.html"},{default:i(()=>[a("（解答）")]),_:1})]),d,k])}const x=t(u,[["render",m],["__file","16.html.vue"]]);export{x as default};
