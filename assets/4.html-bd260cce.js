import{_ as n,p as s,q as a,R as t,a1 as p}from"./framework-49860b1b.js";const e={},o=p(`<h1 id="路由" tabindex="-1"><a class="header-anchor" href="#路由" aria-hidden="true">#</a> 路由</h1><h2 id="显式路由" tabindex="-1"><a class="header-anchor" href="#显式路由" aria-hidden="true">#</a> 显式路由</h2><p>需要在根组件下手动声明</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>
    <span class="token metadata function">@override</span>
    <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">MaterialApp</span><span class="token punctuation">(</span>
            initialRoute<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;/&#39;</span></span><span class="token punctuation">,</span> <span class="token comment">// 默认加载的路由，默认值为 &#39;/&#39;</span>
            routes<span class="token punctuation">:</span> <span class="token punctuation">{</span>
                <span class="token comment">// 显式声明路由</span>
                <span class="token string-literal"><span class="token string">&#39;/&#39;</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">RootPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string-literal"><span class="token string">&#39;/A&#39;</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Apage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string-literal"><span class="token string">&#39;/B&#39;</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Bpage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string-literal"><span class="token string">&#39;/C&#39;</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Cpage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token comment">// home: RootPage(),</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：<code>&#39;/&#39;: (context) =&gt; RootPage()</code> 和 <code>home: RootPage()</code> 不能同时存在</p><h2 id="静态路由跳转" tabindex="-1"><a class="header-anchor" href="#静态路由跳转" aria-hidden="true">#</a> 静态路由跳转</h2><p>方法名中带 <code>Name</code> 的大多数是通过静态路由完成跳转的</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pushNamed</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/A&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pushReplacementNamed</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/A&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pushNamedAndRemoveUntil</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/A&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="动态路由跳转" tabindex="-1"><a class="header-anchor" href="#动态路由跳转" aria-hidden="true">#</a> 动态路由跳转</h2><p>动态路由可随时使用，无需在根组件的 <code>routes</code> 中注册</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">MaterialPageRoute</span><span class="token punctuation">(</span>
    builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Apage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>动态路由需要传入一个 <code>Route</code>，示例中使用的是 <code>MaterialPageRoute</code>，它可以使用和平台风格一致的路由切换动画（iOS 左右，Android 上下），也可使用 <code>CupertinoPageRoute</code> 实现全平台的左右滑动，使用 <code>PageRouteBuilder</code> 可自定义动画</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
    <span class="token class-name">PageRouteBuilder</span><span class="token punctuation">(</span>
        transitionDuration<span class="token punctuation">:</span> <span class="token class-name">Duration</span><span class="token punctuation">(</span>milliseconds<span class="token punctuation">:</span> <span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 动画时长 250 毫秒</span>
        pageBuilder<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">,</span> <span class="token class-name">Animation</span> animation<span class="token punctuation">,</span> <span class="token class-name">Animation</span> secondaryAnimation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 渐隐渐入过渡动画</span>
            <span class="token keyword">return</span> <span class="token class-name">FadeTransition</span><span class="token punctuation">(</span>
                opacity<span class="token punctuation">:</span> animation<span class="token punctuation">,</span>
                child<span class="token punctuation">:</span> <span class="token class-name">Apage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关方法说明" tabindex="-1"><a class="header-anchor" href="#相关方法说明" aria-hidden="true">#</a> 相关方法说明</h2><h3 id="pop" tabindex="-1"><a class="header-anchor" href="#pop" aria-hidden="true">#</a> pop</h3><p>返回当前路由栈的上一个界面</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="push-pushnamed" tabindex="-1"><a class="header-anchor" href="#push-pushnamed" aria-hidden="true">#</a> push / pushNamed</h3><p>基础路由跳转，将一个 <code>page</code> 压入路由栈中，在原来的路由栈上添加一个新的 <code>page</code></p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pushNamed</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/A&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">MaterialPageRoute</span><span class="token punctuation">(</span>
    builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Apage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pushreplacement-pushreplacementnamed-popandpushnamed" tabindex="-1"><a class="header-anchor" href="#pushreplacement-pushreplacementnamed-popandpushnamed" aria-hidden="true">#</a> pushReplacement / pushReplacementNamed / popAndPushNamed</h3><p>替换路由跳转，将当前路由替换掉再跳转（即当前路由不会出现在路由栈中）。<code>popAndPushNamed</code> 的动画效果不一样</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pushReplacementNamed</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/A&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pushReplacement</span><span class="token punctuation">(</span><span class="token class-name">MaterialPageRoute</span><span class="token punctuation">(</span>
    builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Apage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">popAndPushNamed</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/A&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pushandremoveuntil-pushnamedandremoveuntil" tabindex="-1"><a class="header-anchor" href="#pushandremoveuntil-pushnamedandremoveuntil" aria-hidden="true">#</a> pushAndRemoveUntil / pushNamedAndRemoveUntil</h3><p>按次序移除其他的路由，直到遇到被标记的路由（<code>predicate</code> 函数返回了 <code>true</code>）时停止</p><ul><li>根据 <code>predicate</code> 的返回值决定新路由之前的路由的处理方式 <ul><li><code>true</code>：保持不变</li><li><code>false</code>：则新路由外的所有路由都删掉</li></ul></li><li>若没有标记的路由，则全部移除</li><li>当存在重复的标记时，默认移除到最近的一个时停止</li></ul><p>移除全部</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token comment">// 第一种</span>
<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">pushAndRemoveUntil</span><span class="token punctuation">(</span>
    context<span class="token punctuation">,</span>
    <span class="token class-name">MaterialPageRoute</span><span class="token punctuation">(</span>builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Cpage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token class-name">Route</span> route<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> route <span class="token operator">==</span> <span class="token keyword">null</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 第二种</span>
<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pushNamedAndRemoveUntil</span><span class="token punctuation">(</span>
    <span class="token string-literal"><span class="token string">&#39;/C&#39;</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token class-name">Route</span> route<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> route <span class="token operator">==</span> <span class="token keyword">null</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>移除到 <code>RootPage</code> 停止</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token comment">// 第一种</span>
<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">pushAndRemoveUntil</span><span class="token punctuation">(</span>
    context<span class="token punctuation">,</span>
    <span class="token class-name">MaterialPageRoute</span><span class="token punctuation">(</span>builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Cpage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token class-name">ModalRoute</span><span class="token punctuation">.</span><span class="token function">withName</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/&#39;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 仅写法不同</span>
<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">pushAndRemoveUntil</span><span class="token punctuation">(</span>
    context<span class="token punctuation">,</span>
    <span class="token class-name">MaterialPageRoute</span><span class="token punctuation">(</span>builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Cpage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token class-name">Route</span> route<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> route<span class="token punctuation">.</span>settings<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string-literal"><span class="token string">&#39;/&#39;</span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">// 第二种</span>
<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pushNamedAndRemoveUntil</span><span class="token punctuation">(</span>
    <span class="token string-literal"><span class="token string">&#39;/C&#39;</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token class-name">Route</span> route<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> route<span class="token punctuation">.</span>settings<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string-literal"><span class="token string">&#39;/&#39;</span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 仅写法不同</span>
<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pushNamedAndRemoveUntil</span><span class="token punctuation">(</span>
    <span class="token string-literal"><span class="token string">&#39;/C&#39;</span></span><span class="token punctuation">,</span>
    <span class="token class-name">ModalRoute</span><span class="token punctuation">.</span><span class="token function">withName</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/&#39;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="popuntil" tabindex="-1"><a class="header-anchor" href="#popuntil" aria-hidden="true">#</a> popUntil</h3><p>返回到指定的标记路由，若标记的路由为 <code>null</code>，则程序退出</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">popUntil</span><span class="token punctuation">(</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> route<span class="token punctuation">.</span>settings<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string-literal"><span class="token string">&#39;/&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">popUntil</span><span class="token punctuation">(</span><span class="token class-name">ModalRoute</span><span class="token punctuation">.</span><span class="token function">withName</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 返回根路由</span>
<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">popUntil</span><span class="token punctuation">(</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> route<span class="token punctuation">.</span>isFirst<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若标记的路由为动态路由，可在跳转到标记路由的时候设置一下，这样在返回时即可直接调用。示例如下</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token comment">// 设置 Apage 的 RouteSettings</span>
<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">MaterialPageRoute</span><span class="token punctuation">(</span>
    settings<span class="token punctuation">:</span> <span class="token class-name">RouteSettings</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;/A&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Apage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// 在 Cpage 需要返回时调用即可</span>
<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">popUntil</span><span class="token punctuation">(</span><span class="token class-name">ModalRoute</span><span class="token punctuation">.</span><span class="token function">withName</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/A&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="canpop" tabindex="-1"><a class="header-anchor" href="#canpop" aria-hidden="true">#</a> canPop</h3><p>判断是否可以导航到新页面，返回 <code>bool</code> 类型，通常是在设备带返回的物理按键时需要判断是否可以 <code>pop</code></p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">canPop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="maybepop" tabindex="-1"><a class="header-anchor" href="#maybepop" aria-hidden="true">#</a> maybePop</h3><p><code>canPop</code> 的升级版本，如果当前路由可弹出则自动执行，否则不执行</p><h3 id="removeroute-removeroutebelow" tabindex="-1"><a class="header-anchor" href="#removeroute-removeroutebelow" aria-hidden="true">#</a> removeRoute / removeRouteBelow</h3><p>删除路由，同时执行 <code>Route.dispose</code> 操作，无过渡动画，正在进行的手势也会被取消。<code>removeRouteBelow</code> 删除指定路由下面的第一个路由，当对应的路由不存在时会报错</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeRoute</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeRouteBelow</span><span class="token punctuation">(</span>currentRoute<span class="token punctuation">,</span> predicate<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="路由传值" tabindex="-1"><a class="header-anchor" href="#路由传值" aria-hidden="true">#</a> 路由传值</h2><h3 id="向下级路由传值" tabindex="-1"><a class="header-anchor" href="#向下级路由传值" aria-hidden="true">#</a> 向下级路由传值</h3><ul><li>构造函数传值</li></ul><p>个人感觉比较麻烦</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token comment">// 构造一个可以带参数的构造函数</span>
<span class="token keyword">class</span> <span class="token class-name">Apage</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> title<span class="token punctuation">;</span>
    <span class="token class-name">Apage</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token metadata function">@override</span>
    <span class="token class-name">ApageState</span> <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">ApageState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token metadata function">@override</span>
    <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>
            child<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>widget<span class="token punctuation">.</span>title<span class="token punctuation">)</span> <span class="token comment">// 使用 &#39;widget.参数名&#39; 获取</span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">MaterialPageRoute</span><span class="token punctuation">(</span>
    builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Apage</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;这是传入的参数&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>ModalRoute</code> 传值</li></ul><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Navigatro</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">MaterialPageRoute</span><span class="token punctuation">(</span>
    settings<span class="token punctuation">:</span> <span class="token class-name">RouteSettings</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;/A&#39;</span></span><span class="token punctuation">,</span> arguments<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string-literal"><span class="token string">&#39;argms&#39;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;这是传入的参数&#39;</span></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Apage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// 或</span>
<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pushNamed</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/A&#39;</span></span><span class="token punctuation">,</span> arguments<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string-literal"><span class="token string">&#39;argms&#39;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;这是传入的参数&#39;</span></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 在 Apage 中取值</span>
<span class="token keyword">class</span> <span class="token class-name">Apage</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>
    <span class="token metadata function">@override</span>
    <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> params <span class="token operator">=</span> <span class="token class-name">ModalRoute</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>settings<span class="token punctuation">.</span>arguments
        <span class="token keyword">return</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>
            <span class="token comment">// ...</span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="返回上级路由时传值" tabindex="-1"><a class="header-anchor" href="#返回上级路由时传值" aria-hidden="true">#</a> 返回上级路由时传值</h3><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;这是pop返回的参数&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 在上一级路由获取</span>
<span class="token keyword">final</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">MaterialPageRoute</span><span class="token punctuation">(</span>
    builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Cpage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// 或</span>
<span class="token class-name">String</span> value <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pushNamed</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/C&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,52);function c(l,i){return s(),a("div",null,[t(" @format "),o])}const k=n(e,[["render",c],["__file","4.html.vue"]]);export{k as default};
