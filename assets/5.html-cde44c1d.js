import{_ as e,p as a,q as s,R as t,a1 as n}from"./framework-49860b1b.js";const o={},c=n(`<h1 id="第-5-章-文档结构" tabindex="-1"><a class="header-anchor" href="#第-5-章-文档结构" aria-hidden="true">#</a> 第 5 章 文档结构</h1><h2 id="在-svg-中使用样式" tabindex="-1"><a class="header-anchor" href="#在-svg-中使用样式" aria-hidden="true">#</a> 在 SVG 中使用样式</h2><p><code>SVG</code> 允许使用 4 种方式指定图形表现方面的信息</p><ul><li>内联样式：将 <code>style</code> 属性直接写在元素上</li><li>内部样式表：将 <code>&lt;style&gt;</code> 标签通过 <code>&lt;def&gt;</code> 元素定义在 <code>SVG</code> 内部</li><li>外部样式表：普通的 <code>CSS</code> 文件</li><li>表现属性：某些样式也可通过属性实现，如 <code>fill</code></li></ul><h2 id="分组和引用对象" tabindex="-1"><a class="header-anchor" href="#分组和引用对象" aria-hidden="true">#</a> 分组和引用对象</h2><h3 id="g-元素" tabindex="-1"><a class="header-anchor" href="#g-元素" aria-hidden="true">#</a> <code>&lt;g&gt;</code> 元素</h3><p><code>&lt;g&gt;</code> 元素会将其所有子元素作为一个组合，其支持嵌套，通常还会有一个唯一的 <code>id</code> 作为名称。每个组合还可以拥有自己的 <code>&lt;title&gt;</code> 和 <code>&lt;desc&gt;</code> 来供基于文本的 <code>XML</code> 应用程序识别，或者为视障用户提供更好的可访问性</p><p>在起始 <code>&lt;g&gt;</code> 标签种指定的所有样式会应用于组合内的所有子元素</p><h3 id="use-元素" tabindex="-1"><a class="header-anchor" href="#use-元素" aria-hidden="true">#</a> <code>&lt;use&gt;</code> 元素</h3><p>用于复用元素，通过 <code>xlink:href</code> 属性指定 <code>URI</code> 即可，同时还需要指定 <code>x</code> 和 <code>y</code> 的位置以表示将原元素的左上角坐标移动到哪个位置</p><p><code>xlink:href</code> 属性可以指定任意有效的文件或者 <code>URI</code>，并不限制只能使用同一文件内的对象</p><blockquote><p>出于安全原因，引用外部文件时可能会出现跨域的情况</p></blockquote><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#house<span class="token punctuation">&quot;</span></span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>70<span class="token punctuation">&quot;</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="defs-元素" tabindex="-1"><a class="header-anchor" href="#defs-元素" aria-hidden="true">#</a> <code>&lt;defs&gt;</code> 元素</h3><p><code>SVG</code> 规范推荐将所有想要服用的对象放置在该元素内，它们将只会定义而不会显示。其中定义的元素的左上角坐标将会位于 <code>(0, 0)</code> 处，这样在使用 <code>&lt;use&gt;</code> 引用时 <code>x</code>、<code>y</code> 的计算将会变得简单</p><h3 id="symbol-元素" tabindex="-1"><a class="header-anchor" href="#symbol-元素" aria-hidden="true">#</a> <code>&lt;symbol&gt;</code> 元素</h3><p><code>&lt;symbol&gt;</code> 也是一种组合元素的方式，该元素永远不会显示，因此无需将其放在 <code>&lt;defs&gt;</code> 元素内。当时通常使用时还是将其放在 <code>&lt;defs&gt;</code> 元素内</p><p><code>&lt;symbol&gt;</code> 可以指定 <code>viewBox</code> 和 <code>preserveAspectRatio</code> 属性，通过为 <code>&lt;use&gt;</code> 元素添加 <code>width</code> 和 <code>height</code> 属性就可以让 <code>&lt;symbol&gt;</code> 适配视口大小</p><h3 id="image-元素" tabindex="-1"><a class="header-anchor" href="#image-元素" aria-hidden="true">#</a> <code>&lt;image&gt;</code> 元素</h3><p>用于包含一个完整的 <code>SVG</code> 或者栅格文件，通过 <code>xlink:href</code> 属性指定 <code>URI</code> 即可</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#house<span class="token punctuation">&quot;</span></span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>70<span class="token punctuation">&quot;</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>160<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>120<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>包含一个 <code>SVG</code>：其视口会基于引用文件的 <code>x</code>、<code>y</code>、<code>width</code>、<code>height</code> 属性来建立</li><li>包含一个栅格文件，它会被缩放以适配该属性指定的矩形</li></ul><blockquote><ul><li><code>SVG</code> 规范要求阅读器支持 <code>JPEG</code> 和 <code>PNG</code> 两种栅格文件，大多数浏览器还支持 <code>GIF</code></li><li>如果图形文件的尺寸与元素的宽度和高度不匹配，<code>&lt;image&gt;</code> 元素可以使用 <code>preserveAspectRatio</code> 属性指示浏览器应该如何处理，默认值为 <code>xMidYMid meet</code></li><li>如果包含的是 <code>SVG</code> 文件，还可以添加 <code>defer</code> 关键字 <code>defer xMidYMid meet</code>，这样如果包含的文件也有 <code>preserveAspectRatio</code> 属性，则会使用文件的属性来替代默认值</li></ul></blockquote>`,23);function d(l,p){return a(),s("div",null,[t(" @format "),c])}const u=e(o,[["render",d],["__file","5.html.vue"]]);export{u as default};
