import{_ as e,p as a,q as t,R as d,a1 as i}from"./framework-49860b1b.js";const v={},c=i(`<h1 id="cubic-bezier" tabindex="-1" data-v-e692e843><a class="header-anchor" href="#cubic-bezier" aria-hidden="true" data-v-e692e843>#</a> cubic-bezier()</h1><p data-v-e692e843>三次贝塞尔曲线</p><h2 id="模拟抛物线" tabindex="-1" data-v-e692e843><a class="header-anchor" href="#模拟抛物线" aria-hidden="true" data-v-e692e843>#</a> 模拟抛物线</h2><p data-v-e692e843>cubic-bezier(0, V, 1, V)</p><p data-v-e692e843>当 V 的值很大，并且元素的初始状态和最终状态非常接近（或几乎相等，但是不能相等），此时可以模拟抛物线</p><h3 id="数学公式" tabindex="-1" data-v-e692e843><a class="header-anchor" href="#数学公式" aria-hidden="true" data-v-e692e843>#</a> 数学公式</h3><div class="language-text line-numbers-mode" data-ext="text" data-v-e692e843><pre class="language-text" data-v-e692e843><code data-v-e692e843>P = (1−t)³P0 + 3(1−t)²tP1 + 3(1−t)t²P2 + t³P3
</code></pre><div class="line-numbers" aria-hidden="true" data-v-e692e843><div class="line-number" data-v-e692e843></div></div></div><p data-v-e692e843>每个点的定义如下</p><ul data-v-e692e843><li data-v-e692e843>P0 = (0,0)</li><li data-v-e692e843>P1 = (0,V)</li><li data-v-e692e843>P2 = (1,V)</li><li data-v-e692e843>P3 = (1,1)</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-v-e692e843><pre class="language-text" data-v-e692e843><code data-v-e692e843>X(t) = 3(1−t)t² + t³ = 3t² - 2t³
Y(t) = 3(1−t)²tV +3(1−t)t²V + t³ = t³ - 3Vt² + 3Vt
</code></pre><div class="line-numbers" aria-hidden="true" data-v-e692e843><div class="line-number" data-v-e692e843></div><div class="line-number" data-v-e692e843></div></div></div><p data-v-e692e843>v 是最大值，t 在 <code data-v-e692e843>[0,1]</code> 范围内</p><ul data-v-e692e843><li data-v-e692e843>求导：<code data-v-e692e843>Y&#39;(t) = 3t² - 6Vt + 3V</code></li><li data-v-e692e843>结果：<code data-v-e692e843>t = V - sqrt(V² - V)</code></li></ul><p data-v-e692e843>当 v 是一个大值时，<code data-v-e692e843>t = 0.5</code>，所以 <code data-v-e692e843>Y(0.5) = Max</code> 和 <code data-v-e692e843>X(0.5) = 0.5</code>，意味着将在动画的中点达到最大值，符合抛物线</p><h2 id="模拟正弦曲线" tabindex="-1" data-v-e692e843><a class="header-anchor" href="#模拟正弦曲线" aria-hidden="true" data-v-e692e843>#</a> 模拟正弦曲线</h2><h3 id="数学公式-1" tabindex="-1" data-v-e692e843><a class="header-anchor" href="#数学公式-1" aria-hidden="true" data-v-e692e843>#</a> 数学公式</h3><div class="language-text line-numbers-mode" data-ext="text" data-v-e692e843><pre class="language-text" data-v-e692e843><code data-v-e692e843>cubic-bezier(0.5, V, 0.5, -V)
</code></pre><div class="line-numbers" aria-hidden="true" data-v-e692e843><div class="line-number" data-v-e692e843></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-v-e692e843><pre class="language-text" data-v-e692e843><code data-v-e692e843>X(t) = 3/2(1−t)²t + 3/2(1−t)t² + t³ = (3/2)t - (3/2)t² + t³
Y(t) = 3(1−t)²tV - 3(1−t)t²V + t³ = (6V + 1)t³ - 9Vt² + 3Vt
</code></pre><div class="line-numbers" aria-hidden="true" data-v-e692e843><div class="line-number" data-v-e692e843></div><div class="line-number" data-v-e692e843></div></div></div><ul data-v-e692e843><li data-v-e692e843>求导：<code data-v-e692e843>Y&#39;(t) = 3(6V + 1)t² - 18Vt + 3V = 0</code></li><li data-v-e692e843>结果： <ul data-v-e692e843><li data-v-e692e843><code data-v-e692e843>t&#39; = (3V + sqrt(3V² - V))/(6V + 1)</code></li><li data-v-e692e843><code data-v-e692e843>t&#39;&#39;= (3V - sqrt(3V² - V))/(6V + 1)</code></li></ul></li></ul><p data-v-e692e843>对于大值 v，<code data-v-e692e843>t&#39; = 0.211，t&#39;&#39; = 0.789</code>，所以 <code data-v-e692e843>Y(0.211) = Max，Y(0.789) = Min</code>，<code data-v-e692e843>X(0.211) = 0.26，X(0.789) = 0.74</code>，意味着将在 26% 的时间达到最大值，在 74% 的时间达到最小值</p><p data-v-e692e843><i class="start" data-v-e692e843></i><i class="start2" data-v-e692e843></i></p>`,20);function l(s,r){return a(),t("div",null,[d(" @format "),c])}const o=e(v,[["render",l],["__scopeId","data-v-e692e843"],["__file","7.html.vue"]]);export{o as default};
