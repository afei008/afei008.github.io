import{_ as a,p as e,q as i,a1 as l}from"./framework-49860b1b.js";const r={},h=l('<h1 id="浮动" tabindex="-1"><a class="header-anchor" href="#浮动" aria-hidden="true">#</a> 浮动</h1><h2 id="特性" tabindex="-1"><a class="header-anchor" href="#特性" aria-hidden="true">#</a> 特性</h2><ul><li>浮动元素脱离文档流，无法撑开父元素，造成父元素塌陷</li><li>浮动元素后面的内联元素（非浮动）会环绕此浮动元素</li><li>浮动元素后面的块级元素（非浮动）会占据浮动元素的位置，但是内容会环绕浮动元素</li><li>浮动元素后面的浮动元素，同方向浮动：紧跟在前一个元素后面；反方向浮动：互不影响，当宽度不够时会被挤下</li><li>浮动元素会变成块级元素，其宽度会被其子元素撑开</li></ul><h2 id="清除浮动" tabindex="-1"><a class="header-anchor" href="#清除浮动" aria-hidden="true">#</a> 清除浮动</h2><p>总的来说分为两种</p><ul><li>clear 属性</li><li>父元素形成 BFC</li></ul><h3 id="clear-属性" tabindex="-1"><a class="header-anchor" href="#clear-属性" aria-hidden="true">#</a> clear 属性</h3><p>浮动元素末尾添加一个元素，设置属性 clear:both，空元素、after 伪元素都可以</p><h3 id="父元素形成-bfc" tabindex="-1"><a class="header-anchor" href="#父元素形成-bfc" aria-hidden="true">#</a> 父元素形成 BFC</h3><ul><li>父元素添加 overflow:hidden，触发 BFC 清除浮动</li><li>父元素浮动，触发 BFC 清除浮动</li><li>父元素添加绝对定位，触发 BFC 清除浮动</li><li>父元素设置为 diaplay:inline-block，触发 BFC 清除浮动</li></ul>',10),d=[h];function c(t,n){return e(),i("div",null,d)}const s=a(r,[["render",c],["__file","float.html.vue"]]);export{s as default};
