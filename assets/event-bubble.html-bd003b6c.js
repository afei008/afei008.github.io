import{_ as e,p as a,q as r,a1 as h}from"./framework-49860b1b.js";const t={},d=h('<h1 id="事件冒泡、捕获、委托" tabindex="-1"><a class="header-anchor" href="#事件冒泡、捕获、委托" aria-hidden="true">#</a> 事件冒泡、捕获、委托</h1><h2 id="事件阶段" tabindex="-1"><a class="header-anchor" href="#事件阶段" aria-hidden="true">#</a> 事件阶段</h2><p>目标阶段、冒泡阶段、捕获阶段</p><h3 id="目标阶段" tabindex="-1"><a class="header-anchor" href="#目标阶段" aria-hidden="true">#</a> 目标阶段</h3><p>对于事件目标上的监听器来说，事件会处于“目标阶段“，不管第三个参数是 true 或者 false</p><p>第三个参数：true 为事件捕获，false 为事件冒泡</p><p>仅在现代浏览器最近的版本为可选，默认为 false，因此需手动提供该参数</p><h3 id="事件冒泡" tabindex="-1"><a class="header-anchor" href="#事件冒泡" aria-hidden="true">#</a> 事件冒泡</h3><p>从当前元素一直冒泡到根元素</p><h3 id="事件捕获" tabindex="-1"><a class="header-anchor" href="#事件捕获" aria-hidden="true">#</a> 事件捕获</h3><p>从根元素一直捕获到当前元素</p><p>阻止事件冒泡或捕获：stopPropagation() 阻止事件执行：preventDefault()</p><h2 id="事件委托" tabindex="-1"><a class="header-anchor" href="#事件委托" aria-hidden="true">#</a> 事件委托</h2><p>利用事件冒泡，只指定一个事件处理程序，就可以管理某一类型的所有事件</p>',14),n=[d];function i(s,c){return a(),r("div",null,n)}const p=e(t,[["render",i],["__file","event-bubble.html.vue"]]);export{p as default};
