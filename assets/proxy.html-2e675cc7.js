import{_ as e,p as a,q as h,a1 as t}from"./framework-49860b1b.js";const i={},r=t('<h1 id="代理" tabindex="-1"><a class="header-anchor" href="#代理" aria-hidden="true">#</a> 代理</h1><h2 id="代理服务器" tabindex="-1"><a class="header-anchor" href="#代理服务器" aria-hidden="true">#</a> 代理服务器</h2><p>web 代理服务器是网络的中间实体。代理位于 web 客户端和 web 服务器之间，扮演中间人的角色</p><p>http 的代理服务器即是 web 服务器又是 web 客户端</p><h2 id="代理的作用" tabindex="-1"><a class="header-anchor" href="#代理的作用" aria-hidden="true">#</a> 代理的作用</h2><ul><li>翻墙</li><li>匿名访问 http 代理服务器通过删除 http 报文中的身份特性，从而对远端服务器隐藏原始用户的 ip 地址以及其他细节，同时 http 代理服务器上也不会记录原始用户的访问记录</li><li>通过代理上网 比如局域网不能上网，只能通过局域网内的一台代理服务器上网</li><li>通过代理缓存，加快上网速度 大部分代理服务器都具有缓存的功能，具有很大的存储空间，不断地将取得的数据存储到它本地的存储器上，如果浏览器所请求的数据在它本机的存储器上已经存在且是最新的，那么它就不重新从 web 服务器获取数据，而是直接将缓存返回给用户</li><li>儿童过滤器 许多教育机构，会利用过滤器代理来阻止学生访问成人内容</li></ul><h2 id="代理认证-407-状态码" tabindex="-1"><a class="header-anchor" href="#代理认证-407-状态码" aria-hidden="true">#</a> 代理认证，407 状态码</h2><p>代理服务器也可以需要权限认证，http 定义了一种名为代理认证的机制，这种机制可以阻止对内容的请求</p><p>当用户访问需要认证的代理时，代理服务器会返回 407，告诉用户输入用户名和密码，其认证机制和 http 基本认证机制一样（代理返回 407，基本认证返回 401）</p><h2 id="安全问题" tabindex="-1"><a class="header-anchor" href="#安全问题" aria-hidden="true">#</a> 安全问题</h2><p>代理服务器和抓包攻击都能看到 http 请求头中的数据，如果发送的数据中有敏感数据，这会非常危险，因此通常使用 https 来加密，这样代理服务器就看不到里面的数据了</p><h2 id="正向代理与反向代理" tabindex="-1"><a class="header-anchor" href="#正向代理与反向代理" aria-hidden="true">#</a> 正向代理与反向代理</h2><p>两者的区别在于代理的对象不一样</p><ul><li>正向代理的代理对象是客户端</li><li>反向代理的代理对象是服务端</li></ul>',14),d=[r];function l(n,c){return a(),h("div",null,d)}const s=e(i,[["render",l],["__file","proxy.html.vue"]]);export{s as default};
