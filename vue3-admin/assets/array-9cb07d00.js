const t=Math.PI,i=2*t,s=i-1e-6;function h(t){this._+=t[0];for(let i=1,s=t.length;i<s;++i)this._+=arguments[i]+t[i]}class n{constructor(t){this._x0=this._y0=// start of current subpath
this._x1=this._y1=null,this._="",this._append=null==t?h:function(t){let i=Math.floor(t);if(!(i>=0))throw new Error(`invalid digits: ${t}`);if(i>15)return h;const s=10**i;return function(t){this._+=t[0];for(let i=1,h=t.length;i<h;++i)this._+=Math.round(arguments[i]*s)/s+t[i]}}(t)}moveTo(t,i){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+i}`}closePath(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._append`Z`)}lineTo(t,i){this._append`L${this._x1=+t},${this._y1=+i}`}quadraticCurveTo(t,i,s,h){this._append`Q${+t},${+i},${this._x1=+s},${this._y1=+h}`}bezierCurveTo(t,i,s,h,n,e){this._append`C${+t},${+i},${+s},${+h},${this._x1=+n},${this._y1=+e}`}arcTo(i,s,h,n,e){if(i=+i,s=+s,h=+h,n=+n,(e=+e)<0)throw new Error(`negative radius: ${e}`);let _=this._x1,r=this._y1,a=h-i,$=n-s,o=_-i,l=r-s,p=o*o+l*l;if(null===this._x1)this._append`M${this._x1=i},${this._y1=s}`;else if(p>1e-6)if(Math.abs(l*a-$*o)>1e-6&&e){let u=h-_,c=n-r,d=a*a+$*$,f=u*u+c*c,x=Math.sqrt(d),y=Math.sqrt(p),M=e*Math.tan((t-Math.acos((d+p-f)/(2*x*y)))/2),g=M/y,w=M/x;Math.abs(g-1)>1e-6&&this._append`L${i+g*o},${s+g*l}`,this._append`A${e},${e},0,0,${+(l*u>o*c)},${this._x1=i+w*a},${this._y1=s+w*$}`}else this._append`L${this._x1=i},${this._y1=s}`;else;}arc(h,n,e,_,r,a){if(h=+h,n=+n,a=!!a,(e=+e)<0)throw new Error(`negative radius: ${e}`);let $=e*Math.cos(_),o=e*Math.sin(_),l=h+$,p=n+o,u=1^a,c=a?_-r:r-_;null===this._x1?this._append`M${l},${p}`:(Math.abs(this._x1-l)>1e-6||Math.abs(this._y1-p)>1e-6)&&this._append`L${l},${p}`,e&&(c<0&&(c=c%i+i),c>s?this._append`A${e},${e},0,1,${u},${h-$},${n-o}A${e},${e},0,1,${u},${this._x1=l},${this._y1=p}`:c>1e-6&&this._append`A${e},${e},0,${+(c>=t)},${u},${this._x1=h+e*Math.cos(r)},${this._y1=n+e*Math.sin(r)}`)}rect(t,i,s,h){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+i}h${s=+s}v${+h}h${-s}Z`}toString(){return this._}}function e(t){return function(){return t}}function _(t){let i=3;return t.digits=function(s){if(!arguments.length)return i;if(null==s)i=null;else{const t=Math.floor(s);if(!(t>=0))throw new RangeError(`invalid digits: ${s}`);i=t}return t},()=>new n(i)}function r(t){return"object"==typeof t&&"length"in t?t:Array.from(t)}export{r as a,e as c,_ as w};
